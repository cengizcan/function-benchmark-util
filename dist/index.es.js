function n(n,e){return r(n,1,null,e)}function e(n,e,o){return r(n,1,e,o)}function o(n,e,o){return r(n,e,void 0,o)}function r(n,e,o,r){let t,u=0,a=0,l=Number.MAX_SAFE_INTEGER;for(let c=1;c<=e;c++){const m=i(),s=n.apply(o,r),v=i()-m;u+=v,v<l&&(l=v),v>a&&(a=v),c===e&&(t=s)}return{functionName:n.name,fnReturns:t,runCount:e,min:l,max:a,average:u/e}}function i(){var n,e,o,r,i;let t;if(null===(e=null===(n=global)||void 0===n?void 0:n.process)||void 0===e?void 0:e.hrtime){const n=process.hrtime();t=(1e9*n[0]+n[1])/1e3}else(null===(r=null===(o=window)||void 0===o?void 0:o.performance)||void 0===r?void 0:r.now)?t=1e3*performance.now():(null===(i=console)||void 0===i||i.error("Benchmark time precision is in millisecons due to the unrecognized environment!"),t=1e3*Date.now());return t}function t(n,e){return Math.round(n/1e3*Math.pow(10,e))/Math.pow(10,e)}function u(n,e=2){return Object.assign({},n,{min:t(n.min,e),max:t(n.max,e),average:t(n.average,e)})}export{n as benchmark,o as benchmarkTimes,r as benchmarkTimesWithThis,e as benchmarkWithThis,u as convertTimeToMilliseconds,i as tsInMicroseconds};
